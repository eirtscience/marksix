project:
  ☐ Mark6 System

todos:
  ☐ "In this system, we are selling tickets and perform the draws continuously."
     What do you mean by: "perform the draws continuously" please help to explain
  ☐ What is the difference between the `contestants` and the `requesters` user?
  ☐ How is the `contestants` will call the system?
  ☐ Your system must be able to be tested automatically.
    ☐ Please help to explain?
  ☐ You mention in the statement that "there will be only *1* winner"
    ☐ How is the system will respond if there is more than 1 winner?
  ☐ Is the ticket selling will be close when the time reach `Every __x__ seconds` or there will be other event to trigger the close of the selling of the ticket?

  ☐ Response from Gilbert
      ☐ "In this system, we are selling tickets and performing the draws continuously." 
            What do you mean by: "perform the draws continuously" please help to explain Every x seconds, The draw will be performed until the system is terminated.

      ☐ What is the difference between the `contestants` and the `requesters` user?
            It is the same 

      ☐ How is the `contestants` will call the system?
            It is up to you. Some candidates will send a plain RESTful API. Some candidates will click a button on a webpage. Some candidates even send through a chat app. 

      ☐ Your system must be able to be tested automatically.
        ☐ Please help to explain?
            You can programmatically verify your work. Using TDD, E2E test tools...etc.

      ☐ You mention in the statement that "there will be only *1* winner"
        ☐ How is the system will respond if there is more than 1 winner?
            That will be out of spec. The system *cannot* have more than 1 winner. There will be 0 to 1 winner in each round of draw.

      ☐ Is the ticket selling will be close when the time reach `Every__x__ seconds` or there will be other event to trigger the close of the selling of the ticket?
            You are correct in the first sentence. The ticket selling will be closed by the system after X seconds. The system will automatically start the draw and start another round of ticket collecting.
    
      
    